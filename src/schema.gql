# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  username: String!
  password: String!
  email: String!
  firstName: String!
  lastName: String!
  roles: [String!]!
}

type StatusResult {
  message: String!
  success: Boolean!
  id: ID!
}

type AuthenticatedPayload {
  access_token: String!
}

type Tour {
  id: ID!
  tourTitle: String!
  price: String
  currency: String
  location: String
  tourHyperlink: String
  tourBokunId: String
  active: Boolean!
  images: [ImageEntity!]!
  tag: Tag
  destination: Destination!
  priority: Int
}

type Thing {
  id: ID!
  thingTitle: String!
  thingDescription: String!
  thingHyperlink: String
  images: [ImageEntity!]!
  tag: Tag
  destination: Destination!
  active: Boolean!
  priority: Int
}

type CityDataInput {
  name: String!
  id: String!
}

type DurationData {
  days: Int!
  nights: Int!
  validity: Int!
  validityUnit: String!
}

type DatesData {
  bookingFromDate: String!
  bookingToDate: String!
  travelDates: [TravelDate!]!
}

type TravelDate {
  fromDate: String!
  toDate: String!
}

type Photo {
  url: String!
}

type SummaryData {
  inclusions: [String!]!
  exclusions: [String!]!
  highlights: [Highlight!]!
  summary: String!
  photos: [Photo!]!
}

type Highlight {
  title: String!
  description: String!
  url: String!
}

type PricingData {
  currency: String!
  type: String!
  adultPrice: Int!
  childPrice: Int!
  maxMembers: Int!
}

type Policy {
  option: String!
  description: String!
}

type HotelData {
  meals: [String!]
  rating: String
  name: String
  days: Int
  nights: Int
  cities: [CityDataInput!]!
}

type IntercityData {
  fromCity: CityDataInput
  toCity: CityDataInput
  mode: String
  description: String
}

type SightSeeingData {
  city: CityDataInput
  sights: [String!]
}

type Transfers {
  airportTransfers: Boolean
  localTransfers: Boolean
}

type LocationData {
  hotels: [HotelData!]
  intercityData: [IntercityData!]
  sightData: [SightSeeingData!]
  transfers: Transfers
}

type DayWiseItinerary {
  day: Int
  description: String
  cities: [CityDataInput!]!
  meals: [String!]
  inclusions: [String!]
  exclusions: [String!]
}

type Package {
  id: ID!
  title: String
  type: String
  themes: [String!]
  preference: [String!]
  destinations: [Destination!]
  durationData: DurationData
  datesData: [DatesData!]
  summaryData: SummaryData
  pricingData: PricingData
  languages: [String!]
  cancellationPolicy: Policy
  daywiseItinerary: [DayWiseItinerary!]
  locationData: LocationData
}

type Destination {
  id: ID!
  destinationName: String!
  continent: String!
  country: String!
  bannerImage: String!
  bannerHeading: String!
  description: String!
  isPopular: Boolean!
  fromDate: String
  toDate: String
  fromOccasion: String
  toOccasion: String
  images: [ImageEntity!]!
  priority: Int
  tag: Tag
  tours: [Tour!]!
  attractions: [Attraction!]!
  introduction: String
  things: [Thing!]!
  cars: [Car!]!
  holidays: [Package!]
}

type Car {
  id: ID!
  carTitle: String!
  carDescription: String!
  carHyperlink: String
  images: [ImageEntity!]!
  tag: Tag
  destination: Destination!
  active: Boolean!
  priority: Int
  carBokunId: String
  price: String
  currency: String
}

type ImageEntity {
  id: ID!
  imageUrl: String!
}

type Attraction {
  id: ID!
  attractionTitle: String!
  price: String
  currency: String
  location: String!
  attractionBokunId: String
  attractionHyperlink: String
  images: [ImageEntity!]!
  tag: Tag
  destination: Destination!
  active: Boolean!
  priority: Int
}

type Tag {
  id: String!
  name: String!
  active: Boolean!
}

type GetFilteredDestinationResponse {
  destinations: [Destination!]!
  totalCount: Int!
}

type GetFilteredToursResponse {
  tours: [Tour!]!
  totalCount: Int!
}

type CountryDto {
  country: String!
}

type ContinentDto {
  continent: String!
}

type CountryAndContinent {
  country: String!
  continent: String!
  destinationCount: Int
  tourCount: Int
  attractionCount: Int
}

type GetFilteredAttractionResponse {
  attractions: [Attraction!]!
  totalCount: Int!
}

type Content {
  id: ID!
  heroHeading: String!
  heroSubheading: String
  heroImage: String
  footerLinks: [String!]
  footerLogo: String
  socialLinks: [String!]
  tnc: String
  privacy: String
  about: String
  agent: String
  bokunChannelId: String
  leftDiscountImage: String
  rightDiscountImage: String
}

type GetFilteredThingResponse {
  things: [Thing!]!
  totalCount: Int!
}

type GetFilteredCarResponse {
  cars: [Car!]!
  totalCount: Int!
}

type Query {
  findAllUser: [User!]!
  findUserById(id: String!): User!
  getDestinations(isTourActive: Boolean): [Destination!]!
  getDestination(id: String!): Destination
  getDestinationByCity(destinationName: String!): Destination
  getFilteredDestination(page: Int!, loadCount: Int!, filter: TourFilterInput!): GetFilteredDestinationResponse!
  getCountries: [CountryDto!]!
  getContinents: [ContinentDto!]!
  getCountriesAndContinents: [CountryAndContinent!]!
  getCountriesAndContinentsForCMS: [CountryAndContinent!]!
  getUniqueDestinationLocations: [String!]!
  getAllTags: [Tag!]!
  getTagById(id: String!): Tag!
  getTours: [Tour!]!
  getFilteredTours(page: Int!, loadCount: Int!, filter: TourFilterInput!): GetFilteredToursResponse!
  findOne(id: String!): Tour!
  getCountriesAndContinentsForTours: [CountryAndContinent!]!
  getUniqueTourLocations: [String!]!
  getAttractions: [Attraction!]!
  getAttraction(id: String!): Attraction!
  getFilteredAttractions(page: Int!, loadCount: Int!, filter: TourFilterInput!): GetFilteredAttractionResponse!
  getCountriesAndContinentsForAttractions: [CountryAndContinent!]!
  getUniqueAttractionLocations: [String!]!
  getContent: Content!
  getThings: [Thing!]!
  getThingsForCMS: [Thing!]!
  getThing(id: String!): Thing!
  getFilteredThings(page: Int!, loadCount: Int!, filter: TourFilterInput!): GetFilteredThingResponse!
  getCars: [Car!]!
  getCarsForCMS: [Car!]!
  getCar(id: String!): Car!
  getFilteredCars(page: Int!, loadCount: Int!, filter: TourFilterInput!): GetFilteredCarResponse!
  getallpackages: [Package!]!
  getHoliday(id: String!): Package
}

input TourFilterInput {
  location: String
  priceMin: Int
  priceMax: Int
  startDate: String
  endDate: String
  tagName: [String!]
  continent: [String!]
  country: [String!]
  excludeCountry: [String!]
  activeValues: [Boolean!]
  ispopular: Boolean
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): StatusResult!
  removeUser(id: String!): StatusResult!
  register(registerInput: RegisterInput!): AuthenticatedPayload!
  login(loginInput: LoginInput!): AuthenticatedPayload!
  createDestination(createDestinationInput: CreateDestinationInput!): Destination!
  updateDestination(updateDestinationInput: UpdateDestinationInput!): Destination!
  deleteDestination(destinationId: String!): Boolean!
  createTag(createTagDto: CreateTagDTO!): Tag!
  updateTag(updateTagDto: UpdateTagDTO!): Tag!
  removeTag(tagId: String!): StatusResult!
  activateTag(tagId: String!): Tag!
  deactivateTag(tagId: String!): Tag!
  createTour(createTourInput: CreateTourInput!): Tour!
  updateTour(updateTourInput: UpdateTourInput!): Tour!
  deleteTour(id: String!): Tour!
  activateTour(id: String!): Tour!
  createAttraction(createAttractionInput: CreateAttractionInput!): Attraction!
  updateAttraction(updateAttractionInput: UpdateAttractionInput!): Attraction!
  deleteAttraction(id: String!): Attraction!
  activateAttraction(id: String!): Attraction!
  createContent(createContentInput: CreateContentInput!): Content!
  updateContent(updateContentInput: UpdateContentInput!): Content!
  createThing(createThingInput: CreateThingInput!): Thing!
  updateThing(updateThingInput: UpdateThingInput!): Thing!
  deleteThing(id: String!): Thing!
  activateThing(id: String!): Thing!
  createCar(createCarInput: CreateCarInput!): Car!
  updateCar(updateCarInput: UpdateCarInput!): Car!
  deleteCar(id: String!): Car!
  activateCar(id: String!): Car!
  createPackage(input: UpdateGeneralDetailInput!): Package!
  updateGeneralDetail(id: String!, input: UpdateGeneralDetailInput!): Package!
  updateItinerary(id: String!, input: UpdateItineraryInput!): Package!
  updateLocation(id: String!, input: UpdateLocationInput!): Package!
  updateLanguages(id: String!, input: UpdateLanguagesInput!): Package!
  updatePricing(id: String!, input: UpdatePricingInput!): Package!
  updateCancellationPolicy(id: String!, input: UpdateCancellationPolicyInput!): Package!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
  firstName: String!
  lastName: String!
  roleIds: [String!]
}

input UpdateUserInput {
  password: String!
  firstName: String!
  lastName: String!
}

input RegisterInput {
  username: String!
  password: String!
  email: String!
  firstName: String!
  lastName: String!
  roleIds: [String!]
}

input LoginInput {
  username: String!
  password: String!
}

input CreateDestinationInput {
  destinationName: String!
  continent: String
  country: String
  bannerImage: String!
  bannerHeading: String!
  description: String
  fromDate: String
  toDate: String
  fromOccasion: String
  toOccasion: String
  isPopular: Boolean! = false
  imageUrls: [String!]
  tagId: String
  introduction: String! = ""
  priority: Int = 1
}

input UpdateDestinationInput {
  destinationName: String
  continent: String
  country: String
  bannerImage: String
  bannerHeading: String
  description: String
  fromDate: String
  toDate: String
  fromOccasion: String
  toOccasion: String
  isPopular: Boolean = false
  imageUrls: [String!]
  tagId: String
  introduction: String = ""
  priority: Int = 1
  destinationId: ID!
}

input CreateTagDTO {
  name: String!
  active: Boolean! = true
}

input UpdateTagDTO {
  name: String
  active: Boolean = true
  id: ID!
}

input CreateTourInput {
  tourTitle: String!
  price: String!
  location: String!
  currency: String!
  tourHyperlink: String!
  tourBokunId: String!
  imageUrls: [String!]
  destinationId: ID!
  tagId: ID
  priority: Int = 1
}

input UpdateTourInput {
  tourTitle: String
  price: String
  location: String
  currency: String
  tourHyperlink: String
  tourBokunId: String
  imageUrls: [String!]
  destinationId: ID
  tagId: ID
  priority: Int = 1
  tourId: ID!
}

input CreateAttractionInput {
  attractionTitle: String!
  price: String!
  currency: String!
  location: String!
  attractionHyperlink: String
  imageUrls: [String!]
  destinationId: ID!
  tagId: ID
  attractionBokunId: String!
  priority: Int = 1
}

input UpdateAttractionInput {
  attractionTitle: String
  price: String
  currency: String
  location: String
  attractionHyperlink: String
  imageUrls: [String!]
  destinationId: ID
  tagId: ID
  attractionBokunId: String
  priority: Int = 1
  attractionId: ID!
}

input CreateContentInput {
  heroHeading: String
  heroSubheading: String
  heroImage: String
  footerLinks: [String!]
  footerLogo: String
  socialLinks: [String!]
  tnc: String
  privacy: String
  about: String
  agent: String
  bokunChannelId: String
  leftDiscountImage: String
  rightDiscountImage: String
}

input UpdateContentInput {
  id: ID!
  heroHeading: String
  heroSubheading: String
  heroImage: String
  footerLinks: [String!]
  footerLogo: String
  socialLinks: [String!]
  tnc: String!
  privacy: String!
  about: String!
  agent: String!
  bokunChannelId: String!
  leftDiscountImage: String!
  rightDiscountImage: String!
}

input CreateThingInput {
  thingTitle: String!
  thingDescription: String!
  thingHyperlink: String
  imageUrls: [String!]
  tagId: ID
  destinationId: ID!
  priority: Int = 1
}

input UpdateThingInput {
  thingTitle: String
  thingDescription: String
  thingHyperlink: String
  imageUrls: [String!]
  tagId: ID
  destinationId: ID
  priority: Int = 1
  thingId: ID!
}

input CreateCarInput {
  carTitle: String!
  carDescription: String!
  carHyperlink: String
  imageUrls: [String!]
  tagId: ID
  destinationId: ID!
  priority: Int = 1
  carBokunId: String!
  price: String!
  currency: String!
}

input UpdateCarInput {
  carTitle: String
  carDescription: String
  carHyperlink: String
  imageUrls: [String!]
  tagId: ID
  destinationId: ID
  priority: Int = 1
  carBokunId: String
  price: String
  currency: String
  carId: ID!
}

input UpdateGeneralDetailInput {
  title: String
  type: String
  themes: [String!]
  preference: [String!]
  destinationIds: [String!]!
  durationData: DurationDataInput
  datesData: [DatesDataInput!]
  summaryData: SummaryDataInput
}

input DurationDataInput {
  days: Int!
  nights: Int!
  validity: Int!
  validityUnit: String!
}

input DatesDataInput {
  bookingFromDate: String!
  bookingToDate: String!
  travelDates: [TravelDateInput!]!
}

input TravelDateInput {
  fromDate: String!
  toDate: String!
}

input SummaryDataInput {
  inclusions: [String!]!
  exclusions: [String!]!
  highlights: [HighlightInput!]!
  summary: String!
  photos: [PhotoInput!]!
}

input HighlightInput {
  title: String!
  description: String!
  url: String!
}

input PhotoInput {
  url: String!
}

input UpdateItineraryInput {
  daywiseItinerary: [DayWiseItineraryInput!]!
}

input DayWiseItineraryInput {
  day: Int
  description: String!
  cities: [CityDataInp!]!
  meals: [String!]
  inclusions: [String!]
  exclusions: [String!]
}

input CityDataInp {
  name: String!
  id: String!
}

input UpdateLocationInput {
  locationData: LocationDataInput!
}

input LocationDataInput {
  hotelsData: [HotelDataInput!]!
  intercityData: [IntercityDataInput!]!
  sightseeingData: [SightSeeingDataInput!]!
  transfers: TransfersInput!
}

input HotelDataInput {
  cities: [CityDataInp!]!
  meals: [String!]!
  rating: String!
  name: String!
  days: Int!
  nights: Int!
}

input IntercityDataInput {
  fromCity: CityDataInp!
  toCity: CityDataInp!
  mode: String!
  description: String!
}

input SightSeeingDataInput {
  city: CityDataInp!
  sights: [String!]!
}

input TransfersInput {
  airportTransfers: Boolean!
  localTransfers: Boolean!
}

input UpdateLanguagesInput {
  languages: [String!]!
}

input UpdatePricingInput {
  pricingData: PricingDataInput!
}

input PricingDataInput {
  currency: String!
  type: String!
  adultPrice: Int!
  childPrice: Int!
  maxMembers: Int!
}

input UpdateCancellationPolicyInput {
  cancellationPolicy: PolicyInput!
}

input PolicyInput {
  option: String!
  description: String!
}